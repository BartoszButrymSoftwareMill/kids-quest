-- =====================================================
-- Migration: Create Types and Enums
-- Description: Defines all custom ENUM types used across the KidsQuest database schema
-- Tables affected: None (prerequisite for subsequent migrations)
-- Author: KidsQuest Team
-- Date: 2025-10-11
-- =====================================================

-- This migration creates all ENUM types that will be used in the database schema.
-- These types ensure data integrity and provide clear, constrained value sets.

-- =====================================================
-- Quest-related enums
-- =====================================================

-- quest_status: Represents the lifecycle status of a quest
-- Values:
--   - saved: Quest has been generated or created but not started yet
--   - started: User has begun working on the quest
--   - completed: Quest has been successfully finished by the user
create type quest_status as enum ('saved', 'started', 'completed');

-- quest_source: Indicates how a quest was created
-- Values:
--   - ai: Quest was generated by AI based on user preferences
--   - manual: Quest was manually created by the user
create type quest_source as enum ('ai', 'manual');

-- location_type: Defines where a quest can be performed
-- Values:
--   - home: Quest is designed for indoor/home activities
--   - outdoor: Quest requires outdoor space
create type location_type as enum ('home', 'outdoor');

-- energy_level: Indicates the physical activity level required for a quest
-- Values:
--   - low: Calm activities (reading, drawing, puzzles)
--   - medium: Moderate activity (building, light movement)
--   - high: High energy activities (running, jumping, sports)
create type energy_level as enum ('low', 'medium', 'high');

-- =====================================================
-- Content policy enums
-- =====================================================

-- rule_type: Defines the action to take when content matches a policy rule
-- Values:
--   - hard_ban: Content is completely rejected (e.g., weapons, violence)
--   - soft_ban: Content is flagged and can be replaced with safer alternative
--   - replacement: Content is automatically replaced with a safer variant
create type rule_type as enum ('hard_ban', 'soft_ban', 'replacement');

-- pattern_match_type: Specifies how pattern matching should be performed
-- Values:
--   - exact: Exact string match (case-sensitive or insensitive based on rule)
--   - wildcard: Simple wildcard matching (* and ?)
--   - regex: Full regular expression support for complex patterns
create type pattern_match_type as enum ('exact', 'wildcard', 'regex');

-- =====================================================
-- Telemetry enums
-- =====================================================

-- event_type: Defines all trackable user events in the application
-- This enum is critical for analytics and understanding user behavior
-- Values cover the full quest lifecycle and user authentication
create type event_type as enum (
  -- Quest lifecycle events
  'quest_generated',        -- AI successfully generated a new quest
  'quest_started',          -- User began a quest
  'quest_saved',            -- Quest was saved for later
  'quest_completed',        -- Quest was marked as completed
  'quest_created_manual',   -- User manually created a quest
  'delete_quest',           -- Quest was deleted by user
  
  -- User engagement events
  'favorite_toggled',       -- User added/removed quest from favorites
  
  -- Authentication events
  'auth_signup',            -- New user registration
  'auth_login',             -- User login
  
  -- Error events
  'error_generation'        -- AI quest generation failed
);

-- =====================================================
-- End of migration
-- =====================================================
-- All enum types are now available for use in table definitions.
-- Next migration: 20251011000002_create_tables.sql

